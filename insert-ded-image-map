#!/usr/bin/env python3
# insert HTML image map(s) based on DED source files

# Example HTML:
#
# <map name="some-image-map">
#   <!-- BEGIN IMAGE MAP FOR "some-diagram.ded" -->
#   <!-- This image map is automatically inserted by the
#        'insert-ded-image-map' script.  Do not edit it manually. -->
#   <!--AUTO--><area shape="rect" coords="30,35,285,130" href="#EntityA" alt="EntityA" />
#   <!--AUTO--><area shape="rect" coords="415,35,545,100" href="#EntityB" alt="EntityB" />
#   <!--AUTO--><area shape="rect" coords="30,160,365,450" href="#EntityC" alt="EntityC" />
#   <!-- END IMAGE MAP FOR "some-diagram.ded" -->
# </map>

import json                  # json.loads
import re                    # re.search, etc.
import shutil                # shutil.copyfile
import sys                   # sys.argv

class Error(Exception):
  """A condition to be treated as an error."""
  pass

# Throw a fatal error with message.
def die(message):
  raise Error(message)

# Throw a fatal error with the given context and the
# current exception as the conflcit.
def dieContext(context):
  msg = sys.exc_info()[1]
  raise Error(context+": "+str(msg))

try:
  if len(sys.argv) != 2:
    print("usage: "+sys.argv[0]+" file-to-edit.html", file=sys.stderr)
    sys.exit(2)

  # Name of file to read and then rewrite.
  htmlFname = sys.argv[1]

  # Lines of HTML to write.
  htmlOutput = []

  # Name of DED filename in current image map.  It is None
  # when we are not in an image map.
  dedFname = None

  # Read the HTML file, looking for places where an image
  # map should be inserted.
  htmlInputLineNumber = 0
  with open(htmlFname, "rt") as htmlInputFile:
    for line in htmlInputFile:
      try:
        htmlInputLineNumber += 1

        if dedFname:
          # We are skipping to the end of the current image map.
          m = re.compile("<!-- END IMAGE MAP FOR \"(.*)\" -->").search(line)
          if m:
            if m.group(1) == dedFname:
              # Done with this map.
              dedFname = None
              htmlOutput.append(line)
            else:
              die("Image map for \""+dedFname+"\" is either not terminated "+
                  "or ends with an incorrect terminator:\n"+
                  "  "+line)

        else:
          htmlOutput.append(line)

          m = re.compile("<!-- BEGIN IMAGE MAP FOR \"(.*)\" -->").search(line)
          if m:
            dedFname = m.group(1)

            # Prologue.
            htmlOutput.append("  <!-- This image map is automatically inserted by the\n");
            htmlOutput.append("       'insert-ded-image-map' script.  Do not edit it manually. -->\n");

            try:
              # Parse the DED file.
              with open(dedFname, "rt") as dedFile:
                dedDiagram = json.load(dedFile)

              # Emit <map> elements for each entity with name and attributes.
              dedEntities = dedDiagram["entities"]
              for entity in dedEntities:
                name = entity["name"]
                try:
                  attributes = entity["attributes"]
                  if len(name) > 0 and len(attributes) > 0:
                    x = int(entity["loc"]["x"])
                    y = int(entity["loc"]["y"])
                    w = int(entity["size"]["w"])
                    h = int(entity["size"]["h"])

                    # HTML image maps use (x1,y1,x2,y2) rectangles.
                    x2 = x+w
                    y2 = y+h

                    htmlOutput.append("  <!--AUTO--><area shape=\"rect\" coords=\""+
                                      str(x)+","+str(y)+","+str(x2)+","+str(y2)+
                                      "\" href=\"#"+name+
                                      "\" alt=\""+name+"\" />\n");

                except KeyError as e:
                  key = e.args[0]
                  if key == "attributes":
                    # Ignore; treat like empty attributes.
                    0
                  else:
                    die("entity \""+name+"\": key not found: \""+key+"\"")

                except:
                  dieContext("entity \""+name+"\"")

            except KeyError as e:
              die(dedFname+": key not found: \""+e.args[0]+"\"")

            except:
              dieContext(dedFname)

      except:
        dieContext(htmlFname+":"+str(htmlInputLineNumber))

  if dedFname:
    die("Image map for \""+dedFname+"\" is not terminated");

  # Make a backup of the original file before rewriting it.
  shutil.copyfile(htmlFname, htmlFname+".bak");

  # Overwrite the original file.
  with open(htmlFname, "wt") as htmlOutputFile:
    for line in htmlOutput:
      htmlOutputFile.write(line)

  sys.exit(0)

except Error as e:
  print("Error: "+e.args[0], file=sys.stderr)
  sys.exit(2)

except SystemExit as e:
  raise      # let this one go

except:
  print("Error: "+str(sys.exc_info()[1]), file=sys.stderr)
  sys.exit(2)

# EOF
