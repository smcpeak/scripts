#!/usr/bin/perl -w
# script to gunzip and untar a file
# rewritten in perl so I could easily add support for bzip2

# now supports lots of file formats, so I don't have to
# remember all the arcane commands to unpack them

# check usage
$myname = $0;
$myname =~ s%.*/%%;   # strip path component
if (@ARGV < 1) {
  print("usage: $myname filename.tar.gz\n",
        "   or: $myname filename.tar.bz2\n",
        "   or: $myname filename.zip\n",
        "   or: $myname filename.tar\n",
        "   or: $myname filename.deb\n",
        "   or: $myname filename.tar.Z\n",
        "   or: $myname filename.jar\n",
        "unpacks contents of file into a subdir of current directory\n",
        "($myname will create a directory if necessary)\n");
  exit(0);
}
$archive = $ARGV[0];


# verify file is there
if (! -e $archive) {
  die("$myname: $archive does not exist\n");
}


# for some archiving methods (.deb right now), I need an
# absolute path
if ($archive =~ /^\//) {     # already absolute
  $archiveAbsolute = $archive;
}
else {                       # relative to cwd
  $pwd = `pwd`;
  chomp($pwd);
  $archiveAbsolute = $pwd . "/" . $archive;
  #print("absolute name of archive is $archiveAbsolute\n");
}


# figure out what the name is, without the extension(s)
$prefix     = $archive;
$tarred     = ($prefix =~ s/\.tar$//);
$gzipped    = ($prefix =~ s/(\.tar\.gz)|(\.tgz)$//);
$bzipped    = ($prefix =~ s/(\.tar\.bz2)|(\.tbz2)$//);
$pkzipped   = ($prefix =~ s/(\.zip)|(\.ZIP)$//);
$debbed     = ($prefix =~ s/\.deb$//);
$compressed = ($prefix =~ s/\.tar\.Z$//);
$jarred     = ($prefix =~ s/\.jar$//);
if (!($tarred || $gzipped || $bzipped || $pkzipped || $debbed || $compressed || $jarred)) {
  # extension not recognized..
  print("I don't recognize the extension of $archive.\n");
  exit(1);
}
if ($tarred + $gzipped + $bzipped + $pkzipped + $debbed + $compressed + $jarred != 1) {
  die "multiply-archived?  I'm confused...\n";
}

#print("prefix is $prefix\n");


# strip any leading path.. the idea is I can name a tarball
# in another directory but have it unpacked where I am now
$nameOnly = $prefix;
$nameOnly =~ s%.*/%%;


# make a new directory into which to unpack things
$dir = $nameOnly;
while (-e $dir) {
  $dir = "${dir}a";    # rename to avoid collisions
}
mkdir($dir,0777) or die("$myname: failed to create $dir: $!\n");
chdir($dir) or die("$myname: failed to chdir to $dir: $!\n");


# uncompress and extract into created directory
# (must "cd .." first so $archive is known to be the
# right name)
if ($tarred) {
  $res = system("(cd ..; cat \"$archive\") | tar xvf -");
}
elsif ($gzipped) {
  $res = system("(cd ..; gunzip -c \"$archive\") | tar xvf -");
}
elsif ($compressed) {
  $res = system("(cd ..; uncompress -c \"$archive\") | tar xvf -");
}
elsif ($bzipped) {
  $res = system("(cd ..; bunzip2 -c \"$archive\") | tar xvf -");
}
elsif ($pkzipped) {
  $res = system("cd ..; unzip -d \"$dir\" \"$archive\"");
}
elsif ($debbed) {
  $res = system("ar t \"$archiveAbsolute\" && ar x \"$archiveAbsolute\"");
}
elsif ($jarred) {
  $res = system("jar xvf \"$archiveAbsolute\"");
}
else {
  die("oops");
}

if ($res != 0) {
  print("$myname: extraction failed with exit code $?\n");
  exit($?);
}


# see if the tar file made its own directory inside mine
@ls = `ls`;
if (@ls == 1) {
  # it made its own; let's just use that
  $itsname = $ls[0];
  chomp($itsname);
  if ($itsname eq $dir) {
    # my name matches its name; must reconcile
    chdir("..") or die $!;
    $tempdir = "untargz_temp_dir.$$";
    if (-e $tempdir) {
      print("$myname: $tempdir already exists, darn\n");
      exit(1);
    }
    system("mv \"$dir\" $tempdir")==0 or die;
    system("mv ${tempdir}/${itsname} ./${itsname}")==0 or die;
    rmdir("$tempdir") or die $!;
  }
  elsif (-e "../${itsname}") {
    print("$myname: I want to move the unpacked files into $itsname,\n",
          "$myname: but that echo file/dir already exists.\n",
	  "$myname: So, I left them in ${dir}.\n");
    chdir("..") or die $!;
  }
  else {
    # easy case; no name collision
    #print("mv \"$itsname\" ../\"${itsname}\"\n");
    system("mv \"$itsname\" ../\"${itsname}\"")==0 or die;
    chdir("..") or die $!;
    rmdir($dir) or die $!;
  }
}
else {
  # it did not make its own dir, so tell the user where we put it
  print("$myname: $archive did not make its own directory,\n",
        "$myname: so I left all its files in ${dir}.\n");
  chdir("..") or die $!;
}
