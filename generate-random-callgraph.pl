#!/usr/bin/perl -w
# generate a C source file with a random callgraph

use strict;

if (@ARGV != 2) {
  die("usage: $0 num-nodes num-edges > file.c\n");
}

my $numNodes = $ARGV[0];
my $numEdges = $ARGV[1];

# map from node number to space-separated string containing sequence
# of outbound calls
my @calls = ();
my $i;
for ($i=0; $i < $numNodes; $i++) {
  push @calls, ("");
}

# randomly add call edges
for ($i=0; $i < $numEdges; $i++) {
  my $caller = int(rand($numNodes));
  my $callee = int(rand($numNodes));

  $calls[$caller] .= " $callee";
}

# write out the program

# start with some comments
print(<<"EOF");
// random program generated by:
//   $0 $numNodes $numEdges

// prototypes
EOF

# prototypes
for ($i=0; $i < $numNodes; $i++) {
  print("void f$i();\n");
}

# definitions
print(<<"EOF");

// definitions
EOF

for ($i=0; $i < $numNodes; $i++) {
  print("void f$i() {\n");
  
  my @callees = split(' ', $calls[$i]);
  foreach my $callee (@callees) {
    print("  f$callee();\n");
  }
  
  print("}\n\n");
}
     
# epilogue
print("// EOF\n")

# EOF
