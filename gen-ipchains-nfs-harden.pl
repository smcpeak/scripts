#!/usr/bin/perl -w
# script to use ipchains to harden NFS, so that none of its
# daemons can be reached from the outside world; it outputs
# the list of ipchains commands to be executed

use strict 'subs';

# first, grab the list of NFS services running
@services = `rpcinfo -p localhost`;
if ($? != 0) {
  print("rpcinfo failed with exit code $?\n");
  exit(2);
}

# emit first part of a shell script
print("#!/bin/sh\n",
      "# script automatically generated by $0\n",
      "# installs NFS-hardening ipchains rules\n",
      "\n");

# throw away the first line, which is header info
shift(@services);

# process each remaining line
while ($line = shift(@services)) {
  # grab fields
  ($program, $version, $protocol, $port, $name) = split(' ', $line);

  # (debugging) print them
  #print STDERR ("p=$program, v=$version, p=$protocol, p=$port, n=$name\n");

  # emit the command to make it unreachable from eth0
  # (and make it exit(1) otherwise, so I can test them in a script file)
  print("ipchains --append input --interface eth0 --protocol $protocol ",
                 "--destination-port $port --jump REJECT || exit 1\n");
                 
  # silence warnings about unused vars
  eatMe($program, $version, $name);
}


sub eatMe {}
