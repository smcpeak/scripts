#!/usr/bin/perl
# verify a signature on a file

if (@ARGV != 1 && @ARGV != 2) {
  die("usage: $0 filename.asc/sig [filename]\n");
}

my $sigfile = $ARGV[0];

my $mainfile;
if (@ARGV == 1) {
  # Infer name of main file from name of signature file.
  my ($base, $ext) = ($sigfile =~ m/^(.*)\.(asc|sig)$/);
  if (!defined($base)) {
    die("error: When just one file name is provided as an argument,\n" .
        "it should end in either \".asc\" or \".sig\".\n");
  }
  $mainfile = $base;
}
else {
  $mainfile = $ARGV[1];
}

# The MIT server seems to usually be down lately.
#my $keyserver = "pgpkeys.mit.edu";
#my $keyserver = "keys.gnupg.net";
my $keyserver = "pgp.mit.edu";

my $cmd = "gpg --verify '$sigfile' '$mainfile'";
my $output;
my $code;
runCmd();
if ($code == 0) {
  exit(0);
}

my ($keyID) = ($output =~ m/key ID ([0-9A-Z]+)(.|\n)*public key not found/);
if (!defined($keyID)) {
  # Try the "using RSA key" format.
  ($keyID) = ($output =~ m/using RSA key ([0-9A-Z]+)/);
  if (!defined($keyID)) {
    print("verify failed, I do not see the key ID in the output\n");
    exit(2);
  }
}
$cmd = "gpg --keyserver $keyserver --recv-key $keyID";
runCmd();
if ($code != 0) {
  exit(2);
}

$cmd = "gpg --verify '$sigfile' '$mainfile'";
runCmd();
exit($code == 0? 0 : 2);


sub runCmd {
  print("running: $cmd\n");
  $output = `$cmd 2>&1`;
  $code = $?;

  print($output);
  print("exit code: " . interpretExitCode($code) . "\n");
}


sub interpretExitCode {
  my ($code) = @_;

  if ($code == 0 || $code >= 256) {
    return ($code >> 8);
  }
  else {
    return "signal " . $code;
  }
}



# EOF
