#!/usr/bin/env python3
"""
Given a filename, write an empty header file with multiple-include
guards like:

  // foo.h
  // (description goes here)

  #ifndef DIR_FOO_H
  #define DIR_FOO_H


  #endif // DIR_FOO_H

where DIR is the name of the current directory without path info.  Both
the directory and file name are uppercased, and all non-alphanumeric
characters converted to underscores.
"""


import os
import sys
import re

from boilerplate import *


def make_guard_symbol(directory: str, filename: str) -> str:
  """
  Construct a multiple-include header guard symbol for `filename` in
  `directory`.
  """

  dir_name: str = os.path.basename(directory)
  dir_part: str = re.sub(r'[^A-Za-z0-9]', '_', dir_name).upper()
  file_part: str = re.sub(r'[^A-Za-z0-9]', '_', filename).upper()
  return f"{dir_part}_{file_part}"

def main() -> None:
  if len(sys.argv) != 2:
    print(f"Usage: {sys.argv[0]} <header-file-name>")
    sys.exit(2)

  filename: str = sys.argv[1]
  cwd: str = os.getcwd()
  guard_symbol: str = make_guard_symbol(cwd, filename)

  # Placeholder description.
  description = "(description goes here)"

  # Is the name a "-fwd.h" file name?
  fwdHeaderRE = re.compile(r'^(.*)-fwd(\.h.*)$')
  m = fwdHeaderRE.match(filename)
  if m:
    leftSide = m.group(1)
    extension = m.group(2)
    description = f"Forward decls for `{leftSide}{extension}`."

  print(f"// {filename}")
  print(f"// {description}")
  if os.path.exists("license.txt"):
    print(f"")
    print(f"// See license.txt for copyright and terms of use.")
  print(f"")
  print(f"#ifndef {guard_symbol}")
  print(f"#define {guard_symbol}")
  print("")
  print("")
  print(f"#endif // {guard_symbol}")

if __name__ == "__main__":
  call_main(main)


# EOF
